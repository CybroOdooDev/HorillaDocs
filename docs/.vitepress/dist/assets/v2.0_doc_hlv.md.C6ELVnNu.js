import{_ as t,c as i,a2 as e,o as a}from"./chunks/framework.DPuwY6B9.js";const n="/assets/image-1.DUcRoxjO.png",u=JSON.parse('{"title":"Horilla List View (HLV)","description":"","frontmatter":{},"headers":[],"relativePath":"v2.0/doc/hlv.md","filePath":"v2.0/doc/hlv.md","lastUpdated":null}'),d={name:"v2.0/doc/hlv.md"};function l(o,s,h,r,p,c){return a(),i("div",null,s[0]||(s[0]=[e(`<h1 id="horilla-list-view-hlv" tabindex="-1">Horilla List View (HLV) <a class="header-anchor" href="#horilla-list-view-hlv" aria-label="Permalink to &quot;Horilla List View (HLV)&quot;">​</a></h1><p><code>HorillaListView</code> is a class-based view that extends Django&#39;s <code>ListView</code>. It provides advanced functionalities for managing lists in the Horilla application. This includes filtering, bulk actions, export features, and more.</p><h2 id="key-attributes" tabindex="-1">Key Attributes <a class="header-anchor" href="#key-attributes" aria-label="Permalink to &quot;Key Attributes&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Attribute</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>filter_class</code></td><td><code>FilterSet</code></td><td>The filter class to be used for filtering queryset.</td></tr><tr><td><code>view_id</code></td><td><code>str</code></td><td>A unique ID for the view, automatically generated if not provided.</td></tr><tr><td><code>export_file_name</code></td><td><code>str</code></td><td>Name of the file to be used for exporting data.</td></tr><tr><td><code>template_name</code></td><td><code>str</code></td><td>Template used for rendering the view. Default is <code>&quot;generic/horilla_list.html&quot;</code>.</td></tr><tr><td><code>columns</code></td><td><code>list</code></td><td>List of columns to display. Each column is a tuple with <code>(&quot;Verbose Name&quot;, &quot;model_attribute/field_name&quot;, &quot;avatar_mapping&quot;)</code>.</td></tr><tr><td><code>search_url</code></td><td><code>str</code></td><td>URL to be used for search/filter functionality.</td></tr><tr><td><code>header_attrs</code></td><td><code>dict</code></td><td>Additional html attributes to the header columns.</td></tr><tr><td><code>bulk_select_option</code></td><td><code>bool</code></td><td>If <code>True</code>, enables bulk selection of records. Default is <code>True</code>.</td></tr><tr><td><code>actions</code></td><td><code>list</code></td><td>List of actions available for each row. Each action includes the keys: <code>action</code>, <code>accessibility</code>, and <code>attrs</code>.</td></tr><tr><td><code>action_method</code></td><td><code>str</code></td><td>Custom model method that render actions column for HLV.</td></tr><tr><td><code>options</code></td><td><code>list</code></td><td>List of options fe available for each row.</td></tr><tr><td><code>option_method</code></td><td><code>str</code></td><td>Custom model method that render options column for HLV.</td></tr><tr><td><code>row_attrs</code></td><td><code>str</code></td><td>Attributes to apply to each row element.</td></tr><tr><td><code>row_status_class</code></td><td><code>str</code></td><td>CSS class to apply based on row status if you need to add class only to the row element.</td></tr><tr><td><code>row_status_indications</code></td><td><code>list</code></td><td>List of status indicators for rows.</td></tr><tr><td><code>sortby_key</code></td><td><code>str</code></td><td>QueryDict Key name for sorting. Default is <code>&quot;sortby&quot;</code>.</td></tr><tr><td><code>sortby_mapping</code></td><td><code>list</code></td><td>List of mapping with column model_attribute to handle custom sorting.</td></tr><tr><td><code>selected_instances_key_id</code></td><td><code>str</code></td><td>The key used to identify selected instances element&#39;s ID in bulk actions related scripts. Default is <code>&quot;selectedInstances&quot;</code>.</td></tr><tr><td><code>show_filter_tags</code></td><td><code>bool</code></td><td>If <code>True</code>, displays active filter tags in the view. Default is <code>True</code>.</td></tr><tr><td><code>filter_keys_to_remove</code></td><td><code>list</code></td><td>List of keys to exclude from filter tags.</td></tr><tr><td><code>records_per_page</code></td><td><code>int</code></td><td>Number of records to display per page. Default is <code>50</code>.</td></tr><tr><td><code>export_fields</code></td><td><code>list</code></td><td>List of fields to export when exporting data.</td></tr><tr><td><code>bulk_update_fields</code></td><td><code>list</code></td><td>List of fields that can be updated in bulk.</td></tr><tr><td><code>bulk_template</code></td><td><code>str</code></td><td>Template used for rendering the bulk update form. Default is <code>&quot;generic/bulk_form.html&quot;</code>.</td></tr><tr><td><code>toggle_form</code></td><td><code>Form</code></td><td>Form class instance to handle column visibility toggling. Default is <code>ToggleColumnForm</code> instance</td></tr><tr><td><code>visible_column</code></td><td><code>list</code></td><td>List of currently visible columns, after applying toggling.</td></tr><tr><td><code>saved_filters</code></td><td><code>QueryDict</code></td><td>QueryDict containing the saved filters applied to the view while reload.</td></tr><tr><td><code>bulk_update_accessibility</code></td><td><code>method</code></td><td>Method to check if the user has permission to perform bulk updates.</td></tr><tr><td><code>get_bulk_form</code></td><td><code>method</code></td><td>Method to generate the form for bulk updates.</td></tr><tr><td><code>select_all</code></td><td><code>method</code></td><td>Method to return IDs of all records in the queryset for bulk actions.</td></tr><tr><td><code>export_data</code></td><td><code>method</code></td><td>Method to export the list view data in the specified format (e.g., Excel).</td></tr><tr><td><code>serve_bulk_form</code></td><td><code>method</code></td><td>Method to serve the bulk update form.</td></tr><tr><td><code>handle_bulk_submission</code></td><td><code>method</code></td><td>Method to handle form submission for bulk updates.</td></tr><tr><td><code>get_queryset</code></td><td><code>method</code></td><td>Method to retrieve the queryset with filters applied.</td></tr><tr><td><code>get_context_data</code></td><td><code>method</code></td><td>Method to pass additional context variables to the template, including columns, actions, options, filters, sorting, pagination, and bulk paths.</td></tr></tbody></table><h2 id="methods-overview" tabindex="-1">Methods Overview <a class="header-anchor" href="#methods-overview" aria-label="Permalink to &quot;Methods Overview&quot;">​</a></h2><ul><li><strong>bulk_update_accessibility</strong>: Checks if the user has permission to perform bulk updates.</li><li><strong>get_bulk_form</strong>: Generates the bulk update form based on the specified fields.</li><li><strong>serve_bulk_form</strong>: Serves the bulk update form to the user.</li><li><strong>handle_bulk_submission</strong>: Handles the bulk update form submission and processes the updates.</li><li><strong>get_queryset</strong>: Retrieves the queryset and applies filters and sorting.</li><li><strong>get_context_data</strong>: Passes necessary context variables to the template, including column visibility, filters, sorting, and bulk action paths.</li><li><strong>select_all</strong>: Returns the IDs of all records in the queryset for bulk selection.</li><li><strong>export_data</strong>: Exports the data from the visible columns in the current list view.</li></ul><h2 id="usage-example" tabindex="-1">Usage Example <a class="header-anchor" href="#usage-example" aria-label="Permalink to &quot;Usage Example&quot;">​</a></h2><p>Here is an example of how to define a <code>HorillaListView</code> with custom columns and actions:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EmployeeList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HorillaListView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    EmployeeList HLV</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Employee</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    filter_class </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EmployeeFilter </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># django_filterset class</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;get_full_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;get_avatar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Department&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;employee_work_info__department_id__department&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    actions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;action&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Edit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-outline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># supports ionicons</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;attrs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                class=&#39;oh-btn oh-btn--light&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                href=&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{model_method}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # \`model_method\` is any method in the model that return the-</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # url path to perform the action</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;accessibility&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path_to.accessibility_method&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># return True or False</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # only those with the accessibility true will access the actions feature</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;action&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Delete&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;trash-outline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;attrs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                class=&#39;oh-btn oh-btn--light&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;action&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;View&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;eye-outline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;attrs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                class=&#39;oh-btn oh-btn--light&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span></code></pre></div><h3 id="out-put-for-hlv" tabindex="-1">Out put for hlv <a class="header-anchor" href="#out-put-for-hlv" aria-label="Permalink to &quot;Out put for hlv&quot;">​</a></h3><p><img src="`+n+`" alt="alt text"></p><h2 id="bulk-update" tabindex="-1">Bulk Update <a class="header-anchor" href="#bulk-update" aria-label="Permalink to &quot;Bulk Update&quot;">​</a></h2><p>Bulk update functionality is provided through <code>bulk_update_fields</code>. Users can select multiple records and update them in bulk. Permissions for bulk updates are controlled through the <code>bulk_update_accessibility</code> method.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EmployeesList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HorillaListView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bulk_update_fields </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;employee_work_info__department_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # other fields and one-to-one related fields</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # this method already in the parent class</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bulk_update_accessibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Accessibility method for bulk update</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.request.user.has_perm(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;employee.change_employee&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span></code></pre></div><h2 id="filtering" tabindex="-1">Filtering <a class="header-anchor" href="#filtering" aria-label="Permalink to &quot;Filtering&quot;">​</a></h2><p>The view allows filtering based on a predefined <code>filter_class</code>. Filters can be applied via GET parameters or restored from the cache.</p><h2 id="sorting" tabindex="-1">Sorting <a class="header-anchor" href="#sorting" aria-label="Permalink to &quot;Sorting&quot;">​</a></h2><p>Sorting is controlled using the <code>sortby_key</code> and <code>sortby_mapping</code>, which determine the order in which the data is displayed.</p><h2 id="exporting-data" tabindex="-1">Exporting Data <a class="header-anchor" href="#exporting-data" aria-label="Permalink to &quot;Exporting Data&quot;">​</a></h2><p>Data from the visible columns can be exported to an Excel file. The export filename can be customized using the <code>export_file_name</code> attribute.</p>`,20)]))}const E=t(d,[["render",l]]);export{u as __pageData,E as default};
